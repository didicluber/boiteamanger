<?php

namespace AppBundle\Repository;
use Doctrine\DBAL\DBALException;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

/**
 * CommentaireRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentaireRepository extends EntityRepository
{
    public function nbNoteByUser($userId)
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql="SELECT COUNT(id) FROM commentaire WHERE user_id= :userId GROUP BY :userId";
        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        try {
           $stmt->execute(array('userId' => $userId));
        } catch (DBALException $e) {
        }
        return $stmt->fetchColumn();

    }
    public function sumNoteByUser($userId)
    {
        $conn = $this->getEntityManager()->getConnection();
        $sql="SELECT SUM(note) FROM commentaire WHERE user_id= :userId GROUP BY :userId";
        try {
            $stmt = $conn->prepare($sql);
        } catch (DBALException $e) {
        }
        try {
            $stmt->execute(array('userId' => $userId));
        } catch (DBALException $e) {
        }
        return $stmt->fetchColumn();
    }

    public function findByPage($page = 1, $max = 10, $user)
    {
        $dql = $this->createQueryBuilder('com')
            ->where(':user = com.auteur')
            ->setParameter('user', $user);
        $dql->orderBy('com.date', 'DESC');

        $firstResult = ($page - 1) * $max;

        $query = $dql->getQuery();
        $query->setFirstResult($firstResult);
        $query->setMaxResults($max);

        $paginator = new Paginator($query);

        if(($paginator->count() <=  $firstResult) && $page != 1) {
            throw new NotFoundHttpException('Page not found');
        }

        return $paginator;
    }
}
